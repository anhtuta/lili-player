{"version":3,"sources":["components/Button/Button.js","components/Input/InputText.js","pages/Login/Login.js","components/Toast/Toast.js","components/Auth/Auth.js","service/axiosClient.js"],"names":["Button","props","text","onClick","disabled","className","classes","InputText","onChange","e","value","target","maxLength","errorMsg","length","regexValidation","regexErrorMsg","setState","name","invalid","onKeyPress","regex","match","state","defaultValue","this","label","isRequire","type","placeholder","PureComponent","Login","obj","handleSubmit","data","username","password","auth","login","location","from","window","hash","pathname","reload","err","Toast","error","redirectToRefer","to","options","position","toast","POSITION","TOP_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","customToast","info","success","warn","msg","message","toString","isAuthenticated","localStorage","getItem","ACCESS_TOKEN","successCallback","failCallback","axiosClient","post","then","res","setItem","catch","logout","removeItem","console","log","getMe","get","redirectToLoginPage","rolesHasPermission","roles","path","ROLE_TABLE","i","includes","userInfo","axios","interceptors","request","use","config","newConfig","paramsSerializer","params","queryString","stringify","Object","keys","forEach","k","arrayFormat","baseURL","process","headers","Pragma","Authorization","Promise","reject","response","status"],"mappings":"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","file":"static/js/5.50697e9b.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.scss';\n\nconst Button = (props) => {\n  const { text, onClick, disabled = false } = props;\n  const className = props.className ? props.className : 'btn-success';\n  const classes = `btn ${className}`;\n\n  return (\n    <button className={'btn ' + classes} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { PureComponent } from 'react';\nimport './Input.scss';\n\nconst DEFAULT_INPUT_MAX_LENGTH = 200;\n\nclass InputText extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.defaultValue ? props.defaultValue : '',\n      errorMsg: ''\n    };\n  }\n\n  onChange = (e) => {\n    const { value } = e.target;\n    const maxLength = this.props.maxLength\n      ? this.props.maxLength\n      : DEFAULT_INPUT_MAX_LENGTH;\n    let errorMsg = '';\n\n    if (value.length > maxLength) {\n      errorMsg = 'Max length of input is: ' + maxLength;\n    } else if (!this.regexValidation(value)) {\n      errorMsg = this.props.regexErrorMsg ? this.props.regexErrorMsg : 'Input is invalid';\n    }\n\n    this.setState({\n      value,\n      errorMsg\n    });\n\n    this.props.onChange({\n      name: this.props.name,\n      value,\n      invalid: !!errorMsg\n    });\n  };\n\n  onKeyPress = (e) => {\n    const { onKeyPress } = this.props;\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n  };\n\n  regexValidation = (value) => {\n    const regex = this.props.regex ? this.props.regex : '';\n    if (value === '' || regex === '') return true;\n    return value.match(regex);\n  };\n\n  render() {\n    const {\n      name,\n      label,\n      disabled = false,\n      isRequire = false,\n      type = 'text',\n      placeholder\n    } = this.props;\n\n    const { value, errorMsg } = this.state;\n\n    return (\n      <div className=\"input-wrapper\">\n        {label && (\n          <label className=\"input-label\">\n            {label}\n            {isRequire && <span className=\"input-require\">&nbsp;*</span>}\n          </label>\n        )}\n        <div className=\"input-text-wrapper\">\n          <input\n            type={type}\n            name={name}\n            value={value}\n            disabled={disabled}\n            onChange={this.onChange}\n            className={'input-text' + (!!errorMsg ? ' input-error' : '')}\n            placeholder={placeholder}\n            onKeyPress={this.onKeyPress}\n          />\n          {!!errorMsg && <div className=\"input-error-msg\">{errorMsg}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputText;\n","import React, { PureComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from '../../components/Button/Button';\nimport InputText from '../../components/Input/InputText';\nimport { auth } from '../../components/Auth/Auth';\nimport Toast from '../../components/Toast/Toast';\nimport './Login.scss';\n\nclass Login extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error: false,\n      redirectToRefer: false\n    };\n    this.from = { pathname: '/' };\n  }\n\n  onChange = (obj) => {\n    this.setState({\n      [obj.name]: obj.value\n    });\n  };\n\n  handleSubmit = () => {\n    const { username, password } = this.state;\n    const data = {\n      username,\n      password\n    };\n    auth.login(\n      data,\n      () => {\n        if (this.props.location.state) {\n          this.from = this.props.location.state.from;\n        }\n        window.location.hash = this.from.pathname;\n\n        // reload to rerender Nav (some menu could be displayed only after login)\n        window.location.reload();\n      },\n      (err) => {\n        Toast.error(err);\n      }\n    );\n  };\n\n  render() {\n    const { username, password, redirectToRefer } = this.state;\n\n    if (redirectToRefer) {\n      return <Redirect to={this.from} />;\n    }\n\n    return (\n      <div className=\"login-wrapper\">\n        <h2 className=\"login-header\">Login</h2>\n        <InputText\n          label=\"Username\"\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n        />\n        <InputText\n          label=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Button text=\"Login\" onClick={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst options = {\n  position: toast.POSITION.TOP_RIGHT, //\"top-right\"\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n\nconst info = (text) => {\n  toast.info(text, options);\n};\n\nconst success = (text) => {\n  toast.success(text, options);\n};\n\nconst warn = (text) => {\n  toast.warn(text, options);\n};\n\nconst error = (err) => {\n  let msg;\n  if (err.data && err.data.message) msg = err.data.message;\n  else if (err) msg = err.toString();\n  else msg = 'Error: unexpected error occurred!';\n  toast.error(msg, options);\n};\n\nconst customToast = {\n  info,\n  success,\n  warn,\n  error\n};\n\nexport default customToast;\n","import { ACCESS_TOKEN } from '../../constants/Constants';\nimport axiosClient from '../../service/axiosClient';\nimport Toast from '../Toast/Toast';\nimport { ROLE_TABLE } from '../../constants/Constants';\n\nclass Auth {\n  constructor() {\n    this.userInfo = null;\n  }\n\n  isAuthenticated = () => {\n    const access_token = localStorage.getItem(ACCESS_TOKEN);\n    return !!access_token;\n  };\n\n  login = ({ username, password }, successCallback, failCallback) => {\n    const data = {\n      username,\n      password\n    };\n    axiosClient\n      .post('/signin', data)\n      .then((res) => {\n        localStorage.setItem(ACCESS_TOKEN, res[ACCESS_TOKEN]);\n        successCallback();\n      })\n      .catch((err) => {\n        failCallback(err.data ? err.data : err);\n      });\n  };\n\n  logout = () => {\n    axiosClient\n      .post('/signout')\n      .then((res) => {\n        localStorage.removeItem(ACCESS_TOKEN);\n        window.location = '/';\n      })\n      .catch((err) => {\n        console.log(err);\n        Toast.error(err);\n      });\n  };\n\n  getMe = () => {\n    return axiosClient.get('/api/user/me');\n  };\n\n  redirectToLoginPage = () => {\n    Toast.info('You need to login first!');\n    localStorage.removeItem(ACCESS_TOKEN);\n    window.location.hash = '/login';\n  };\n\n  /**\n   * Check xem mảng roles có tồn tại role nào có quyền truy cập path hay ko\n   * @param {string[]} roles - Array of role\n   * @param {string} path - URL\n   */\n  rolesHasPermission = (roles, path) => {\n    if (!ROLE_TABLE[path]) return true;\n    for (let i = 0; i < roles.length; i++) {\n      if (ROLE_TABLE[path].includes(roles[i])) return true;\n    }\n    // Dùng forEach: bất đồng bộ nên ko được nhé!\n    // Nó sẽ return false trước khi chạy vào trong forEach\n    // roles.forEach(role => {\n    //   if (ROLE_TABLE[path].includes(role)) return true;\n    // });\n    return false;\n  };\n}\n\nexport let auth = new Auth();\n","import axios from 'axios';\nimport queryString from 'query-string';\nimport { ACCESS_TOKEN } from '../constants/Constants';\nimport { auth } from '../components/Auth/Auth';\n\nconst cleanParam = (obj) => {\n  Object.keys(obj).forEach((k) => {\n    if (obj[k] === null || obj[k] === undefined) {\n      delete obj[k];\n    }\n  });\n  return obj;\n};\n\naxios.interceptors.request.use(\n  function (config) {\n    const newConfig = {\n      ...config,\n      paramsSerializer: (params) =>\n        queryString.stringify(cleanParam(params), { arrayFormat: 'repeat' }),\n      baseURL: process.env.REACT_APP_HOST_API,\n      // withCredentials: true,\n      headers: {\n        ...config.headers,\n        Pragma: 'no-cache'\n      }\n    };\n\n    // Add auth token\n    if (localStorage.getItem(ACCESS_TOKEN)) {\n      newConfig.headers.Authorization = `Bearer ${localStorage.getItem(ACCESS_TOKEN)}`;\n    }\n\n    return newConfig;\n  },\n  (error) => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    if (response && response.data) return response.data;\n    return response;\n  },\n  (error) => {\n    if (error.response && error.response.status) {\n      if (error.response.status === 401) {\n        auth.redirectToLoginPage();\n      }\n      //... handle other statuses\n      return Promise.reject(error.response);\n    } else {\n      return Promise.reject(error);\n    }\n  }\n);\n\nexport default axios;\n"],"sourceRoot":""}