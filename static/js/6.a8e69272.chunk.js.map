{"version":3,"sources":["components/Nav/Nav.js","components/Toast/Toast.js","components/Auth/Auth.js","service/axiosClient.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["Nav","handleLogout","auth","logout","getActiveMenuItems","roleArray","menuItems","forEach","item","index","subItems","rolesHasPermission","path","enabled","generateMenu","pathname","props","location","map","itemClass","key","className","level","to","name","toggleDarkMode","context","theme","updateTheme","THEME_LIGHT","THEME_DARK","userInfo","this","MENU_ITEMS","title","onClick","role","aria-label","Component","contextType","LiliContext","withRouter","options","position","toast","POSITION","TOP_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","customToast","info","text","success","warn","error","err","msg","data","message","toString","isAuthenticated","localStorage","getItem","ACCESS_TOKEN","login","successCallback","failCallback","username","password","axiosClient","post","then","res","setItem","catch","removeItem","window","console","log","Toast","getMe","get","redirectToLoginPage","hash","roles","ROLE_TABLE","i","length","includes","axios","interceptors","request","use","config","newConfig","paramsSerializer","params","queryString","stringify","obj","Object","keys","k","arrayFormat","baseURL","process","headers","Pragma","Authorization","Promise","reject","response","status","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/6.a8e69272.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { MENU_ITEMS, THEME_DARK, THEME_LIGHT } from '../../constants/Constants';\nimport { auth } from '../Auth/Auth';\nimport { LiliContext } from '../../context/LiliContext';\nimport './Nav.scss';\n\nclass Nav extends Component {\n  // contextType là 1 biến của React.Component,\n  // sau lệnh gán này ta có thể dùng được data của LiliContext thông qua: this.context\n  static contextType = LiliContext;\n\n  handleLogout = () => {\n    auth.logout();\n  };\n\n  getActiveMenuItems = (roleArray, menuItems) => {\n    menuItems.forEach((item, index) => {\n      if (item.subItems) {\n        this.getActiveMenuItems(roleArray, item.subItems);\n      } else {\n        if (!auth.rolesHasPermission(roleArray, item.path)) {\n          // ĐỪNG dùng splice, bởi vì JS bất đồng bộ nên sẽ bị lỗi thỉnh thoảng bị miss menu item\n          // menuItems.splice(index, 1);\n          item.enabled = false;\n        }\n      }\n    });\n  };\n\n  generateMenu = (menuItems) => {\n    const { pathname } = this.props.location;\n    return menuItems.map((item) => {\n      const itemClass = 'menu-item' + (item.path === pathname ? ' active-menu' : '');\n      if (item.path === null) item.path = '#';\n\n      if (item.subItems) {\n        return (\n          <li key={item.key} className={itemClass + ' menu-parent level' + item.level}>\n            <Link to={item.path}>\n              {item.name} <i className={'caret fas ' + (item.level > 1 ? 'fa-caret-right' : 'fa-caret-down')}></i>\n            </Link>\n            <ul key={item.key} className={itemClass + ' sub-menu level' + (item.level + 1)}>\n              {this.generateMenu(item.subItems)}\n            </ul>\n          </li>\n        );\n      } else {\n        return (\n          item.enabled && (\n            <li key={item.key} className={itemClass + ' level' + item.level}>\n              <Link to={item.path}>{item.name}</Link>\n            </li>\n          )\n        );\n      }\n    });\n  };\n\n  toggleDarkMode = () => {\n    const { theme, updateTheme } = this.context;\n    if (theme === THEME_LIGHT) {\n      updateTheme(THEME_DARK);\n    } else {\n      updateTheme(THEME_LIGHT);\n    }\n  };\n\n  render() {\n    const { userInfo } = this.props;\n    const roleArray = userInfo ? userInfo.roleArray : [];\n    const menuItems = [...MENU_ITEMS];\n    const { theme } = this.context;\n    this.getActiveMenuItems(roleArray, menuItems);\n\n    return (\n      <nav className=\"custom-navbar\">\n        <ul className=\"nav-wrapper\">{this.generateMenu(menuItems)}</ul>\n        <div className=\"userinfo-wrapper\">\n          <div className=\"div-header\">\n            <span\n              className=\"btn_dark_mode\"\n              title={theme === THEME_LIGHT ? 'Toggle Dark mode' : 'Toggle Light mode'}\n              onClick={this.toggleDarkMode}\n              role=\"img\"\n              aria-label=\"emoji\"\n            >\n              {theme === THEME_LIGHT ? '🌜' : '🌞'}\n            </span>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\n// Use withRouter HOC in order to inject match, history and location in your component props.\nexport default withRouter(Nav);\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst options = {\n  position: toast.POSITION.TOP_RIGHT, //\"top-right\"\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n\nconst info = (text) => {\n  toast.info(text, options);\n};\n\nconst success = (text) => {\n  toast.success(text, options);\n};\n\nconst warn = (text) => {\n  toast.warn(text, options);\n};\n\nconst error = (err) => {\n  let msg;\n  if (err.data && err.data.message) msg = err.data.message;\n  else if (err) msg = err.toString();\n  else msg = 'Error: unexpected error occurred!';\n  toast.error(msg, options);\n};\n\nconst customToast = {\n  info,\n  success,\n  warn,\n  error\n};\n\nexport default customToast;\n","import { ACCESS_TOKEN } from '../../constants/Constants';\nimport axiosClient from '../../service/axiosClient';\nimport Toast from '../Toast/Toast';\nimport { ROLE_TABLE } from '../../constants/Constants';\n\nclass Auth {\n  constructor() {\n    this.userInfo = null;\n  }\n\n  isAuthenticated = () => {\n    const access_token = localStorage.getItem(ACCESS_TOKEN);\n    return !!access_token;\n  };\n\n  login = ({ username, password }, successCallback, failCallback) => {\n    const data = {\n      username,\n      password\n    };\n    axiosClient\n      .post('/signin', data)\n      .then((res) => {\n        localStorage.setItem(ACCESS_TOKEN, res[ACCESS_TOKEN]);\n        successCallback();\n      })\n      .catch((err) => {\n        failCallback(err.data ? err.data : err);\n      });\n  };\n\n  logout = () => {\n    axiosClient\n      .post('/signout')\n      .then((res) => {\n        localStorage.removeItem(ACCESS_TOKEN);\n        window.location = '/';\n      })\n      .catch((err) => {\n        console.log(err);\n        Toast.error(err);\n      });\n  };\n\n  getMe = () => {\n    return axiosClient.get('/api/user/me');\n  };\n\n  redirectToLoginPage = () => {\n    Toast.info('You need to login first!');\n    localStorage.removeItem(ACCESS_TOKEN);\n    window.location.hash = '/login';\n  };\n\n  /**\n   * Check xem mảng roles có tồn tại role nào có quyền truy cập path hay ko\n   * @param {string[]} roles - Array of role\n   * @param {string} path - URL\n   */\n  rolesHasPermission = (roles, path) => {\n    if (!ROLE_TABLE[path]) return true;\n    for (let i = 0; i < roles.length; i++) {\n      if (ROLE_TABLE[path].includes(roles[i])) return true;\n    }\n    // Dùng forEach: bất đồng bộ nên ko được nhé!\n    // Nó sẽ return false trước khi chạy vào trong forEach\n    // roles.forEach(role => {\n    //   if (ROLE_TABLE[path].includes(role)) return true;\n    // });\n    return false;\n  };\n}\n\nexport let auth = new Auth();\n","import axios from 'axios';\nimport queryString from 'query-string';\nimport { ACCESS_TOKEN } from '../constants/Constants';\nimport { auth } from '../components/Auth/Auth';\n\nconst cleanParam = (obj) => {\n  Object.keys(obj).forEach((k) => {\n    if (obj[k] === null || obj[k] === undefined) {\n      delete obj[k];\n    }\n  });\n  return obj;\n};\n\naxios.interceptors.request.use(\n  function (config) {\n    const newConfig = {\n      ...config,\n      paramsSerializer: (params) =>\n        queryString.stringify(cleanParam(params), { arrayFormat: 'repeat' }),\n      baseURL: process.env.REACT_APP_HOST_API,\n      // withCredentials: true,\n      headers: {\n        ...config.headers,\n        Pragma: 'no-cache'\n      }\n    };\n\n    // Add auth token\n    if (localStorage.getItem(ACCESS_TOKEN)) {\n      newConfig.headers.Authorization = `Bearer ${localStorage.getItem(ACCESS_TOKEN)}`;\n    }\n\n    return newConfig;\n  },\n  (error) => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    if (response && response.data) return response.data;\n    return response;\n  },\n  (error) => {\n    if (error.response && error.response.status) {\n      if (error.response.status === 401) {\n        auth.redirectToLoginPage();\n      }\n      //... handle other statuses\n      return Promise.reject(error.response);\n    } else {\n      return Promise.reject(error);\n    }\n  }\n);\n\nexport default axios;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}