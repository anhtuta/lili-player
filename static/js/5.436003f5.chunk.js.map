{"version":3,"sources":["components/Toast/Toast.js","components/Auth/Auth.js","service/axiosClient.js","components/Button/Button.js","components/Input/InputText.js","pages/Login/Login.js"],"names":["options","position","toast","POSITION","TOP_RIGHT","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","customToast","info","text","success","warn","error","err","msg","data","message","toString","auth","constructor","isAuthenticated","localStorage","getItem","ACCESS_TOKEN","login","_ref","successCallback","failCallback","username","password","axiosClient","post","then","res","setItem","catch","logout","removeItem","window","location","console","log","Toast","getMe","get","redirectToLoginPage","hash","rolesHasPermission","roles","path","ROLE_TABLE","i","length","includes","this","userInfo","axios","interceptors","request","use","config","newConfig","paramsSerializer","params","queryString","stringify","obj","Object","keys","forEach","k","arrayFormat","baseURL","process","headers","Pragma","Authorization","Promise","reject","response","status","Button","props","onClick","disabled","classes","className","React","createElement","InputText","PureComponent","super","onChange","e","value","target","maxLength","errorMsg","regexValidation","regexErrorMsg","setState","name","invalid","onKeyPress","regex","match","state","defaultValue","render","label","isRequire","type","placeholder","Login","handleSubmit","from","pathname","reload","redirectToRefer","Redirect","to"],"mappings":"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","file":"static/js/5.436003f5.chunk.js","sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst options = {\n  position: toast.POSITION.TOP_RIGHT, //\"top-right\"\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n\nconst info = (text) => {\n  toast.info(text, options);\n};\n\nconst success = (text) => {\n  toast.success(text, options);\n};\n\nconst warn = (text) => {\n  toast.warn(text, options);\n};\n\nconst error = (err) => {\n  let msg;\n  if (err.data && err.data.message) msg = err.data.message;\n  else if (err) msg = err.toString();\n  else msg = 'Error: unexpected error occurred!';\n  toast.error(msg, options);\n};\n\nconst customToast = {\n  info,\n  success,\n  warn,\n  error\n};\n\nexport default customToast;\n","import { ACCESS_TOKEN } from '../../constants/Constants';\nimport axiosClient from '../../service/axiosClient';\nimport Toast from '../Toast/Toast';\nimport { ROLE_TABLE } from '../../constants/Constants';\n\nclass Auth {\n  constructor() {\n    this.userInfo = null;\n  }\n\n  isAuthenticated = () => {\n    const access_token = localStorage.getItem(ACCESS_TOKEN);\n    return !!access_token;\n  };\n\n  login = ({ username, password }, successCallback, failCallback) => {\n    const data = {\n      username,\n      password\n    };\n    axiosClient\n      .post('/signin', data)\n      .then((res) => {\n        localStorage.setItem(ACCESS_TOKEN, res[ACCESS_TOKEN]);\n        successCallback();\n      })\n      .catch((err) => {\n        failCallback(err.data ? err.data : err);\n      });\n  };\n\n  logout = () => {\n    axiosClient\n      .post('/signout')\n      .then((res) => {\n        localStorage.removeItem(ACCESS_TOKEN);\n        window.location = '/';\n      })\n      .catch((err) => {\n        console.log(err);\n        Toast.error(err);\n      });\n  };\n\n  getMe = () => {\n    return axiosClient.get('/api/user/me');\n  };\n\n  redirectToLoginPage = () => {\n    Toast.info('You need to login first!');\n    localStorage.removeItem(ACCESS_TOKEN);\n    window.location.hash = '/login';\n  };\n\n  /**\n   * Check xem mảng roles có tồn tại role nào có quyền truy cập path hay ko\n   * @param {string[]} roles - Array of role\n   * @param {string} path - URL\n   */\n  rolesHasPermission = (roles, path) => {\n    if (!ROLE_TABLE[path]) return true;\n    for (let i = 0; i < roles.length; i++) {\n      if (ROLE_TABLE[path].includes(roles[i])) return true;\n    }\n    // Dùng forEach: bất đồng bộ nên ko được nhé!\n    // Nó sẽ return false trước khi chạy vào trong forEach\n    // roles.forEach(role => {\n    //   if (ROLE_TABLE[path].includes(role)) return true;\n    // });\n    return false;\n  };\n}\n\nexport let auth = new Auth();\n","import axios from 'axios';\nimport queryString from 'query-string';\nimport { ACCESS_TOKEN } from '../constants/Constants';\nimport { auth } from '../components/Auth/Auth';\n\nconst cleanParam = (obj) => {\n  Object.keys(obj).forEach((k) => {\n    if (obj[k] === null || obj[k] === undefined) {\n      delete obj[k];\n    }\n  });\n  return obj;\n};\n\naxios.interceptors.request.use(\n  function (config) {\n    const newConfig = {\n      ...config,\n      paramsSerializer: (params) =>\n        queryString.stringify(cleanParam(params), { arrayFormat: 'repeat' }),\n      baseURL: process.env.REACT_APP_HOST_API,\n      // withCredentials: true,\n      headers: {\n        ...config.headers,\n        Pragma: 'no-cache'\n      }\n    };\n\n    // Add auth token\n    if (localStorage.getItem(ACCESS_TOKEN)) {\n      newConfig.headers.Authorization = `Bearer ${localStorage.getItem(ACCESS_TOKEN)}`;\n    }\n\n    return newConfig;\n  },\n  (error) => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    if (response && response.data) return response.data;\n    return response;\n  },\n  (error) => {\n    if (error.response && error.response.status) {\n      if (error.response.status === 401) {\n        auth.redirectToLoginPage();\n      }\n      //... handle other statuses\n      return Promise.reject(error.response);\n    } else {\n      return Promise.reject(error);\n    }\n  }\n);\n\nexport default axios;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = (props) => {\n  const { text, onClick, disabled = false } = props;\n  const className = props.className ? props.className : 'btn-success';\n  const classes = `btn ${className}`;\n\n  return (\n    <button className={'btn ' + classes} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { PureComponent } from 'react';\nimport './Input.scss';\n\nconst DEFAULT_INPUT_MAX_LENGTH = 200;\n\nclass InputText extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.defaultValue ? props.defaultValue : '',\n      errorMsg: ''\n    };\n  }\n\n  onChange = (e) => {\n    const { value } = e.target;\n    const maxLength = this.props.maxLength\n      ? this.props.maxLength\n      : DEFAULT_INPUT_MAX_LENGTH;\n    let errorMsg = '';\n\n    if (value.length > maxLength) {\n      errorMsg = 'Max length of input is: ' + maxLength;\n    } else if (!this.regexValidation(value)) {\n      errorMsg = this.props.regexErrorMsg ? this.props.regexErrorMsg : 'Input is invalid';\n    }\n\n    this.setState({\n      value,\n      errorMsg\n    });\n\n    this.props.onChange({\n      name: this.props.name,\n      value,\n      invalid: !!errorMsg\n    });\n  };\n\n  onKeyPress = (e) => {\n    const { onKeyPress } = this.props;\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n  };\n\n  regexValidation = (value) => {\n    const regex = this.props.regex ? this.props.regex : '';\n    if (value === '' || regex === '') return true;\n    return value.match(regex);\n  };\n\n  render() {\n    const {\n      name,\n      label,\n      disabled = false,\n      isRequire = false,\n      type = 'text',\n      placeholder\n    } = this.props;\n\n    const { value, errorMsg } = this.state;\n\n    return (\n      <div className=\"input-wrapper\">\n        {label && (\n          <label className=\"input-label\">\n            {label}\n            {isRequire && <span className=\"input-require\">&nbsp;*</span>}\n          </label>\n        )}\n        <div className=\"input-text-wrapper\">\n          <input\n            type={type}\n            name={name}\n            value={value}\n            disabled={disabled}\n            onChange={this.onChange}\n            className={'input-text' + (!!errorMsg ? ' input-error' : '')}\n            placeholder={placeholder}\n            onKeyPress={this.onKeyPress}\n          />\n          {!!errorMsg && <div className=\"input-error-msg\">{errorMsg}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputText;\n","import React, { PureComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from '../../components/Button/Button';\nimport InputText from '../../components/Input/InputText';\nimport { auth } from '../../components/Auth/Auth';\nimport Toast from '../../components/Toast/Toast';\nimport './Login.scss';\n\nclass Login extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error: false,\n      redirectToRefer: false\n    };\n    this.from = { pathname: '/' };\n  }\n\n  onChange = (obj) => {\n    this.setState({\n      [obj.name]: obj.value\n    });\n  };\n\n  handleSubmit = () => {\n    const { username, password } = this.state;\n    const data = {\n      username,\n      password\n    };\n    auth.login(\n      data,\n      () => {\n        if (this.props.location.state) {\n          this.from = this.props.location.state.from;\n        }\n        window.location.hash = this.from.pathname;\n\n        // reload to rerender Nav (some menu could be displayed only after login)\n        window.location.reload();\n      },\n      (err) => {\n        Toast.error(err);\n      }\n    );\n  };\n\n  render() {\n    const { username, password, redirectToRefer } = this.state;\n\n    if (redirectToRefer) {\n      return <Redirect to={this.from} />;\n    }\n\n    return (\n      <div className=\"login-wrapper\">\n        <h2 className=\"login-header\">Login</h2>\n        <InputText\n          label=\"Username\"\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n        />\n        <InputText\n          label=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Button text=\"Login\" onClick={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"sourceRoot":""}